// <auto-generated />
using System;
using DigiturkBlog.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DigiturkBlog.Data.Migrations
{
    [DbContext(typeof(EfCoreContext))]
    [Migration("20191113180726_DigiturkBlogDb")]
    partial class DigiturkBlogDb
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DigiturkBlog.Data.Entities.Article", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AuthorId");

                    b.Property<string>("Content");

                    b.Property<bool>("IsActive");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<DateTime>("PublishedDate");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.ToTable("Articles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AuthorId = 1,
                            Content = "Lorem ipsum dolor sit amed.",
                            IsActive = true,
                            ModifiedDate = new DateTime(2019, 11, 13, 21, 7, 26, 328, DateTimeKind.Local).AddTicks(3567),
                            PublishedDate = new DateTime(2019, 11, 13, 21, 7, 26, 327, DateTimeKind.Local).AddTicks(5848),
                            Title = "What is Art-Fiction"
                        },
                        new
                        {
                            Id = 2,
                            AuthorId = 2,
                            Content = "Lorem ipsum dolor sit amed.",
                            IsActive = true,
                            ModifiedDate = new DateTime(2019, 11, 13, 21, 7, 26, 328, DateTimeKind.Local).AddTicks(5329),
                            PublishedDate = new DateTime(2019, 11, 13, 21, 7, 26, 328, DateTimeKind.Local).AddTicks(5324),
                            Title = "C# Movie"
                        },
                        new
                        {
                            Id = 3,
                            AuthorId = 3,
                            Content = "Lorem ipsum dolor sit amed.",
                            IsActive = true,
                            ModifiedDate = new DateTime(2019, 11, 13, 21, 7, 26, 328, DateTimeKind.Local).AddTicks(5354),
                            PublishedDate = new DateTime(2019, 11, 13, 21, 7, 26, 328, DateTimeKind.Local).AddTicks(5354),
                            Title = "Terminator"
                        });
                });

            modelBuilder.Entity("DigiturkBlog.Data.Entities.ArticleTag", b =>
                {
                    b.Property<int>("TagId");

                    b.Property<int>("ArticleId");

                    b.HasKey("TagId", "ArticleId");

                    b.HasIndex("ArticleId");

                    b.ToTable("ArticleTag");

                    b.HasData(
                        new
                        {
                            TagId = 1,
                            ArticleId = 1
                        },
                        new
                        {
                            TagId = 3,
                            ArticleId = 1
                        },
                        new
                        {
                            TagId = 2,
                            ArticleId = 2
                        },
                        new
                        {
                            TagId = 3,
                            ArticleId = 2
                        },
                        new
                        {
                            TagId = 3,
                            ArticleId = 3
                        },
                        new
                        {
                            TagId = 2,
                            ArticleId = 3
                        });
                });

            modelBuilder.Entity("DigiturkBlog.Data.Entities.Author", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("About");

                    b.Property<string>("Email");

                    b.Property<string>("FirstName");

                    b.Property<bool>("IsActive");

                    b.Property<string>("LastName");

                    b.HasKey("Id");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            Id = 2,
                            About = "DummyAbout",
                            Email = "xxx@vvv.com",
                            FirstName = "Misaki",
                            IsActive = true,
                            LastName = "Taro"
                        },
                        new
                        {
                            Id = 1,
                            About = "DummyAbout",
                            Email = "xxx@vvv.com",
                            FirstName = "Tsubasa",
                            IsActive = true,
                            LastName = "Ozora"
                        },
                        new
                        {
                            Id = 3,
                            About = "DummyAbout",
                            Email = "xxx@vvv.com",
                            FirstName = "Jun",
                            IsActive = true,
                            LastName = "Misugi"
                        });
                });

            modelBuilder.Entity("DigiturkBlog.Data.Entities.Tag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Tags");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Fiction"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Technology"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Art"
                        });
                });

            modelBuilder.Entity("DigiturkBlog.Data.Entities.Article", b =>
                {
                    b.HasOne("DigiturkBlog.Data.Entities.Author", "Author")
                        .WithMany("Articles")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("DigiturkBlog.Data.Entities.ArticleTag", b =>
                {
                    b.HasOne("DigiturkBlog.Data.Entities.Article", "Author")
                        .WithMany()
                        .HasForeignKey("ArticleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("DigiturkBlog.Data.Entities.Tag", "Tag")
                        .WithMany()
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
